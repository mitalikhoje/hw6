{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","fName","setFName","lName","setLName","body","a","fetch","headers","JSON","stringify","response","json","className","onSubmit","event","preventDefault","target","reset","handleSubmit","for","TextField","id","variant","onChange","e","value","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA2CeA,MAvCf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAHa,4CAWb,WAA4BC,GAA5B,iBAAAC,EAAA,sEACyBC,MAAM,iBAAiB,CAC5C,OAAS,OACTC,QAAU,CACV,eAAe,oBAEjBH,KAAKI,KAAKC,UAAUL,KANtB,cACQM,EADR,gBAQqBA,EAASC,OAR9B,OAQQA,EARR,OASER,EAASQ,GATX,4CAXa,sBAuBb,OACE,qBAAKC,UAAU,MAAf,SACE,uBAAMC,SApBV,SAAmBC,GACjBA,EAAMC,iBACND,EAAME,OAAOC,QAPF,oCAQXC,CAAa,CAAClB,WAiBZ,UACE,uBAAOmB,IAAI,QAAX,0BACA,cAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,QAAQ,WACRC,SAAU,SAACC,GAAD,OAAKvB,EAASuB,EAAER,OAAOS,UAEnC,wBAAQC,KAAK,SAAb,oBACA,4CAAexB,WCzBRyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a91d054d.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport TextField from '@mui/material/TextField';\n\nfunction App() {\n\n  const [fName, setFName] = useState('')\n  const [lName, setLName] = useState('')\n\n  function sendFName(event){\n    event.preventDefault()\n    event.target.reset()\n    handleSubmit({fName})\n  }\n\n  async function handleSubmit(body) {\n    const response = await fetch('/get-last-name',{\n      'method':'POST',\n      headers : {\n      'Content-Type':'application/json'\n    },\n    body:JSON.stringify(body)\n    })\n    const json = await response.json();\n    setLName(json)\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={sendFName}>\n        <label for=\"fname\">First name: </label>\n        <TextField \n          id=\"outlined-basic\"\n          variant=\"outlined\" \n          onChange={(e)=>setFName(e.target.value)}\n        />\n        <button type='submit'>Submit</button>\n        <p>Last name: {lName}</p>\n      </form>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}